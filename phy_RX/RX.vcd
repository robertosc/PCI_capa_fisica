$date
	Fri Oct  2 19:29:51 2020
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module BancoPrueba_RX $end
$var wire 1 ! valid_final $end
$var wire 1 " serial_data_1 $end
$var wire 1 # serial_data_0 $end
$var wire 1 $ reset $end
$var wire 32 % data_final [31:0] $end
$var wire 1 & clk_4f $end
$var wire 1 ' clk_32f $end
$var wire 1 ( clk_2f $end
$scope module RX_conductual $end
$var wire 1 ) valid_sp_0 $end
$var wire 1 * valid_sp_1 $end
$var wire 1 + valid_out_0 $end
$var wire 1 ! valid_final $end
$var wire 1 , valid_demux_1 $end
$var wire 1 - valid_demux_0 $end
$var wire 1 " serial_data_1 $end
$var wire 1 # serial_data_0 $end
$var wire 1 $ reset $end
$var wire 32 . demux_out_1 [31:0] $end
$var wire 32 / demux_out_0 [31:0] $end
$var wire 8 0 data_out_sp_1 [7:0] $end
$var wire 8 1 data_out_sp_0 [7:0] $end
$var wire 32 2 data_final [31:0] $end
$var wire 8 3 data2send_1 [7:0] $end
$var wire 8 4 data2send_0 [7:0] $end
$var wire 1 & clk_4f $end
$var wire 1 ' clk_32f $end
$var wire 1 ( clk_2f $end
$var wire 1 5 active_1 $end
$var wire 1 6 active_0 $end
$scope module demux_final_0 $end
$var wire 1 ) valid $end
$var wire 1 $ reset $end
$var wire 8 7 data_in [7:0] $end
$var wire 1 & clk_4f $end
$var reg 32 8 data_out [31:0] $end
$var reg 2 9 selector [1:0] $end
$var reg 1 - valid_out $end
$upscope $end
$scope module demux_final_1 $end
$var wire 1 * valid $end
$var wire 1 $ reset $end
$var wire 8 : data_in [7:0] $end
$var wire 1 & clk_4f $end
$var reg 32 ; data_out [31:0] $end
$var reg 2 < selector [1:0] $end
$var reg 1 , valid_out $end
$upscope $end
$scope module mux_stp $end
$var wire 32 = lane_0 [31:0] $end
$var wire 32 > lane_1 [31:0] $end
$var wire 1 - valid_0 $end
$var wire 1 , valid_1 $end
$var wire 1 $ reset $end
$var wire 1 ( clk_2f $end
$var reg 32 ? data_output [31:0] $end
$var reg 1 @ sel $end
$var reg 1 ! valid_out $end
$upscope $end
$scope module sp0 $end
$var wire 1 $ reset $end
$var wire 1 # data_in $end
$var wire 1 & clk_4f $end
$var wire 1 ' clk_32f $end
$var reg 3 A BC_counter [2:0] $end
$var reg 1 6 active $end
$var reg 8 B data2send [7:0] $end
$var reg 8 C data_out [7:0] $end
$var reg 1 D dataout_on $end
$var reg 3 E selector [2:0] $end
$var reg 8 F transicion_dataout [7:0] $end
$var reg 1 + valid_out $end
$upscope $end
$scope module sp1 $end
$var wire 1 $ reset $end
$var wire 1 " data_in $end
$var wire 1 & clk_4f $end
$var wire 1 ' clk_32f $end
$var reg 3 G BC_counter [2:0] $end
$var reg 1 5 active $end
$var reg 8 H data2send [7:0] $end
$var reg 8 I data_out [7:0] $end
$var reg 1 J dataout_on $end
$var reg 3 K selector [2:0] $end
$var reg 8 L transicion_dataout [7:0] $end
$var reg 1 * valid_out $end
$upscope $end
$upscope $end
$scope module probador $end
$var wire 32 M data_final [31:0] $end
$var wire 1 ! valid_final $end
$var reg 1 ( clk_2f $end
$var reg 1 ' clk_32f $end
$var reg 1 & clk_4f $end
$var reg 1 $ reset $end
$var reg 1 # serial_data_0 $end
$var reg 1 " serial_data_1 $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 M
b0 L
b0 K
0J
b0 I
b0 H
b0 G
b0 F
b0 E
0D
b0 C
b0 B
b0 A
0@
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
06
05
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
0-
0,
0+
0*
z)
1(
1'
1&
b0 %
0$
1#
1"
0!
$end
#10
0'
#20
0"
0#
1'
#30
0'
#40
1"
1#
1'
#50
0'
#60
1'
#70
0'
#80
1'
0&
#90
0'
#100
1'
#110
0'
#120
0"
0#
1'
#130
0'
#140
1'
#150
0'
#160
1"
1#
1'
1&
0(
#170
0'
#180
0"
0#
1'
#190
0'
#200
1"
1#
1'
#210
0'
#220
1'
#230
0'
#240
1'
0&
#250
0'
#260
1'
#270
0'
#280
0"
0#
1'
#290
0'
#300
1'
#310
0'
#320
1"
1#
1$
1'
1&
1(
#330
0'
#340
0"
0#
b1 K
b10000000 3
b10000000 H
b1 E
b10000000 4
b10000000 B
1'
#350
0'
#360
b10 E
b10 K
1"
1#
1'
#370
0'
#380
b11 K
b10100000 3
b10100000 H
b11 E
b10100000 4
b10100000 B
1'
#390
0'
#400
b100 E
b10110000 4
b10110000 B
b100 K
b10110000 3
b10110000 H
1'
0&
#410
0'
#420
b101 K
b10111000 3
b10111000 H
b101 E
b10111000 4
b10111000 B
1'
#430
0'
#440
b110 E
b10111100 4
b10111100 B
b110 K
b10111100 3
b10111100 H
0"
0#
1'
#450
0'
#460
b111 K
b111 E
1'
#470
0'
#480
b1 A
b0 E
b1 G
b0 K
1"
1#
1'
1&
0(
#490
0'
#500
0"
0#
b1 K
b1 E
1'
#510
0'
#520
b10 E
b10 K
1"
1#
1'
#530
0'
#540
b11 K
b11 E
1'
#550
0'
#560
b100 E
b100 K
1'
0&
#570
0'
#580
b101 K
b101 E
1'
#590
0'
#600
b110 E
b110 K
0"
0#
1'
#610
0'
#620
b111 K
b111 E
1'
#630
0'
#640
b10 A
b0 E
b10 G
b0 K
1"
1#
1'
1&
1(
#650
0'
#660
0"
0#
b1 K
b1 E
1'
#670
0'
#680
b10 E
b10 K
1"
1#
1'
#690
0'
#700
b11 K
b11 E
1'
#710
0'
#720
b100 E
b100 K
1'
0&
#730
0'
#740
b101 K
b101 E
1'
#750
0'
#760
b110 E
b110 K
0"
0#
1'
#770
0'
#780
b111 K
b111 E
1'
#790
0'
#800
b11 A
b0 E
b11 G
b0 K
1"
1#
1'
1&
0(
#810
0'
#820
0"
0#
b1 K
b1 E
1'
#830
0'
#840
b10 E
b10 K
1"
1#
1'
#850
0'
#860
b11 K
b11 E
1'
#870
0'
#880
b100 E
b100 K
1'
0&
#890
0'
#900
b101 K
b101 E
1'
#910
0'
#920
b110 E
b110 K
0"
0#
1'
#930
0'
#940
b111 K
b111 E
1'
#950
0'
#960
b100 A
b0 E
b100 G
b0 K
1"
1#
1'
1&
1(
#970
0'
#980
0"
0#
b1 K
b1 E
1'
#990
0'
#1000
b10 E
b10 K
1"
1#
1'
#1010
0'
#1020
b11 K
b11 E
1'
#1030
0'
#1040
b100 E
b100 K
1'
0&
#1050
0'
#1060
b101 K
b101 E
1'
#1070
0'
#1080
b110 E
b110 K
0"
0#
1'
#1090
0'
#1100
b111 K
b111 E
1'
#1110
0'
#1120
16
b101 A
b0 E
15
b101 G
b0 K
1"
1#
1'
1&
0(
#1130
0'
#1140
b1 K
b1 E
1'
#1150
0'
#1160
b10 E
b11111100 4
b11111100 B
b10 K
b11111100 3
b11111100 H
1'
#1170
0'
#1180
b11 K
b11 E
1'
#1190
0'
#1200
b100 E
b100 K
0"
0#
1'
0&
#1210
0'
#1220
b101 K
b11110100 3
b11110100 H
b101 E
b11110100 4
b11110100 B
1'
#1230
0'
#1240
b110 E
b11110000 4
b11110000 B
b110 K
b11110000 3
b11110000 H
1'
#1250
0'
#1260
b111 K
b111 E
1'
#1270
0'
#1280
1D
1+
b0 E
1J
1*
b0 K
1"
1#
1'
1&
1(
#1290
0'
#1300
b1 K
b10000000 L
b1 E
b10000000 F
1'
#1310
0'
#1320
b10 E
b11000000 F
b10 K
b11000000 L
1'
#1330
0'
#1340
b11 K
b11100000 L
b11 E
b11100000 F
1'
#1350
0'
#1360
b100 E
b11110000 F
b100 K
b11110000 L
0"
0#
1'
0&
#1370
0'
#1380
b101 K
b101 E
1'
#1390
0'
#1400
b110 E
b110 K
1'
#1410
0'
#1420
b111 K
b111 E
1'
#1430
0'
#1440
b11110000 1
b11110000 7
b11110000 C
b0 E
b11110000 0
b11110000 :
b11110000 I
b0 K
b1 <
1,
1"
1#
1'
1&
0(
#1450
0'
#1460
b1 K
b1 E
1'
#1470
0'
#1480
b10 E
b10 K
1'
#1490
0'
#1500
b11 K
b11 E
1'
#1510
0'
#1520
b100 E
b100 K
0"
0#
1'
0&
#1530
0'
#1540
b101 K
b101 E
1'
#1550
0'
#1560
b110 E
b110 K
1'
#1570
0'
#1580
b111 K
b111 E
1'
#1590
0'
#1600
b0 E
b0 K
b10 <
b111100000000000000000000 .
b111100000000000000000000 ;
b111100000000000000000000 >
1'
1&
1(
#1610
0'
#1620
b1 K
b1110000 L
b1110000 3
b1110000 H
b1 E
b1110000 F
b1110000 4
b1110000 B
1'
#1630
0'
#1640
b10 E
b110000 F
b110000 4
b110000 B
b10 K
b110000 L
b110000 3
b110000 H
1'
#1650
0'
#1660
b11 K
b10000 L
b10000 3
b10000 H
b11 E
b10000 F
b10000 4
b10000 B
1'
#1670
0'
#1680
b100 E
b0 F
b0 4
b0 B
b100 K
b0 L
b0 3
b0 H
1"
1#
1'
0&
#1690
0'
#1700
b101 K
b1000 L
b1000 3
b1000 H
b101 E
b1000 F
b1000 4
b1000 B
1'
#1710
0'
#1720
b110 E
b1100 F
b1100 4
b1100 B
b110 K
b1100 L
b1100 3
b1100 H
1'
#1730
0'
#1740
b111 K
b1110 L
b1110 3
b1110 H
b111 E
b1110 F
b1110 4
b1110 B
1'
#1750
0'
#1760
b1110 1
b1110 7
b1110 C
b0 E
b1111 F
b1111 4
b1111 B
b1110 0
b1110 :
b1110 I
b0 K
b1111 L
b1111 3
b1111 H
b11 <
b111100001111000000000000 .
b111100001111000000000000 ;
b111100001111000000000000 >
0"
0#
1'
1&
0(
#1770
0'
#1780
b1 K
b1 E
1'
#1790
0'
#1800
b10 E
b10 K
1'
#1810
0'
#1820
b11 K
b11 E
1'
#1830
0'
#1840
b100 E
b100 K
1"
1#
1'
0&
#1850
0'
#1860
b101 K
b101 E
1'
#1870
0'
#1880
b110 E
b110 K
1'
#1890
0'
#1900
b111 K
b111 E
1'
#1910
0'
#1920
b1111 1
b1111 7
b1111 C
b0 E
b1111 0
b1111 :
b1111 I
b0 K
b0 <
b111100001111000000001110 .
b111100001111000000001110 ;
b111100001111000000001110 >
1'
1&
1(
