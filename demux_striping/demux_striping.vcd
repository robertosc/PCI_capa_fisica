$date
	Mon Sep 21 12:38:09 2020
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module banco_demux_striping $end
$var wire 1 ! valid_out1 $end
$var wire 1 " valid_out0 $end
$var wire 1 # valid_in $end
$var wire 32 $ lane_1 [31:0] $end
$var wire 32 % lane_0 [31:0] $end
$var wire 32 & data_input [31:0] $end
$var wire 1 ' clk_2f $end
$scope module demuxs $end
$var wire 1 # valid_in $end
$var wire 32 ( data_input [31:0] $end
$var wire 1 ' clk_2f $end
$var reg 32 ) lane_0 [31:0] $end
$var reg 32 * lane_1 [31:0] $end
$var reg 1 + sel $end
$var reg 1 " valid_out0 $end
$var reg 1 ! valid_out1 $end
$upscope $end
$scope module probador $end
$var wire 32 , lane_0 [31:0] $end
$var wire 32 - lane_1 [31:0] $end
$var wire 1 " valid_out0 $end
$var wire 1 ! valid_out1 $end
$var reg 1 ' clk_2f $end
$var reg 32 . data_input [31:0] $end
$var reg 1 # valid_in $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 .
bx -
bx ,
0+
bx *
bx )
b0 (
0'
b0 &
bx %
bx $
0#
x"
x!
$end
#20000000
0"
1+
b11111111111111111111111111111111 &
b11111111111111111111111111111111 (
b11111111111111111111111111111111 .
1'
#40000000
0'
#60000000
b10101010101010101010101010101010 &
b10101010101010101010101010101010 (
b10101010101010101010101010101010 .
1#
0!
0+
1'
#80000000
0'
#100000000
1"
1+
b10101010101010101010101010101010 %
b10101010101010101010101010101010 )
b10101010101010101010101010101010 ,
b11101110111011101110111011101110 &
b11101110111011101110111011101110 (
b11101110111011101110111011101110 .
1'
#120000000
0'
#140000000
b11001100110011001100110011001100 &
b11001100110011001100110011001100 (
b11001100110011001100110011001100 .
1!
0+
b11101110111011101110111011101110 $
b11101110111011101110111011101110 *
b11101110111011101110111011101110 -
1'
#160000000
0'
#180000000
1+
b11001100110011001100110011001100 %
b11001100110011001100110011001100 )
b11001100110011001100110011001100 ,
b10101010101010101010101010101010 &
b10101010101010101010101010101010 (
b10101010101010101010101010101010 .
1'
#200000000
0'
#220000000
b10001000100010001000100010001 &
b10001000100010001000100010001 (
b10001000100010001000100010001 .
0+
b10101010101010101010101010101010 $
b10101010101010101010101010101010 *
b10101010101010101010101010101010 -
1'
#240000000
0'
#260000000
1+
b10001000100010001000100010001 %
b10001000100010001000100010001 )
b10001000100010001000100010001 ,
b10011001100110011001100110011001 &
b10011001100110011001100110011001 (
b10011001100110011001100110011001 .
1'
#280000000
0'
#300000000
0+
b10011001100110011001100110011001 $
b10011001100110011001100110011001 *
b10011001100110011001100110011001 -
1'
#320000000
0'
#340000000
1+
b10011001100110011001100110011001 %
b10011001100110011001100110011001 )
b10011001100110011001100110011001 ,
1'
